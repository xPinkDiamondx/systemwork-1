/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2020-05-31 15:59:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _02_002d02slist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("        <!DOCTYPE html>\n");
      out.write("        <html>\n");
      out.write("\n");
      out.write("        <head>\n");
      out.write("            <link rel=\"stylesheet\" href=\"02-02slist.css\">\n");
      out.write("            <meta charset=\"UTF-8\">\n");
      out.write("            <title>商品一覧</title>\n");
      out.write("        </head>\n");
      out.write("\n");
      out.write("        <body>\n");
      out.write("            <header>\n");
      out.write("                <h1 id=\"head_h1\"><img id=\"head_img\" src=\"iceimg/logo.jpg\"> 船橋あいす工房</h1>\n");
      out.write("            </header>\n");
      out.write("\n");
      out.write("            <div>\n");
      out.write("                <table>\n");
      out.write("                    <td class=\"gnavi_td\"><a class=\"gnavi_a\" href=\"02-02kodawari.jsp\">こだわり</a></td>\n");
      out.write("                    <td class=\"gnavi_td\"><a class=\"gnavi_a\" href=\"\">商品一覧</td>\n");
      out.write("                    <td class=\"gnavi_td\"><a class=\"gnavi_a\"href=\"\">人気商品</td>\n");
      out.write("                    <td class=\"gnavi_td\">会社概要</td>\n");
      out.write("                    <td class=\"gnavi_td\">お問い合わせ</td>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div id=\"gnavi\">\n");
      out.write("                <table>\n");
      out.write("                    <td class=\"gmavi_td\">A1</td>\n");
      out.write("                    <td class=\"gmavi_td\">B2</td>\n");
      out.write("                    <td class=\"gmavi_td\">C3</td>\n");
      out.write("                    <td class=\"gmavi_td\">D4</td>\n");
      out.write("                    <td class=\"gmavi_td\">E5</td>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div id=\"main\">\n");
      out.write("                <h1 class=\"main_h1\">商品一覧</h1>\n");
      out.write("                <h2 class=\"list_main_h2\">ICE CREAM</h2>\n");
      out.write("                <table><!--列ごとに幅を設定-->\n");
      out.write("                    <col width=\"100\" align=\"left\">\n");
      out.write("                    <col width=\"100\"><col width=\"50\">\n");
      out.write("                    <col width=\"300\">\n");
      out.write("                    <tr>\n");
      out.write("                        <td>\n");
      out.write("                            <img  src=\"iceimg/ice01.jpg\" />\n");
      out.write("                        </td>\n");
      out.write("                        <td>濃厚ミルクバニラ</td>\n");
      out.write("                        <td>300円(税込)</td>\n");
      out.write("                        <td>生乳本来の風味を生かした乳原料を使用していますので、コクのある豊かな味わいがお楽しみいただけます。</td>\n");
      out.write("                    </tr>\n");
      out.write("                </table>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("    <footer>Copyright &copy;船橋あいす工房, all rights reserved.</footer>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
